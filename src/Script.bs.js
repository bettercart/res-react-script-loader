// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");

function useScript(src, onLoad, onFailure) {
  var match = React.useState(function () {
        return /* Idle */0;
      });
  var setStatus = match[1];
  var handleOnLoad = function (script, $$event) {
    script.setAttribute("data-status", "ready");
    Curry._1(setStatus, (function (param) {
            return /* Ready */2;
          }));
    return Curry._1(onLoad, $$event);
  };
  var handleOnError = function (script, $$event) {
    script.setAttribute("data-status", "failed");
    Curry._1(setStatus, (function (param) {
            return /* Failed */3;
          }));
    return Curry._1(onFailure, $$event);
  };
  React.useEffect((function () {
          Curry._1(setStatus, (function (param) {
                  return /* Loading */1;
                }));
          var existingScript = document.querySelector("script[src=\"" + src + "\"]");
          if (existingScript == null) {
            var script = document.createElement("script");
            script.setAttribute("src", src);
            script.setAttribute("async", "true");
            script.setAttribute("data-status", "loading");
            script.addEventListener("load", (function ($$event) {
                    return handleOnLoad(script, $$event);
                  }));
            script.addEventListener("error", (function ($$event) {
                    return handleOnError(script, $$event);
                  }));
            var bodyElements = document.getElementsByTagName("body");
            var body = bodyElements.item(0);
            if (body == null) {
              Curry._1(setStatus, (function (param) {
                      return /* Failed */3;
                    }));
            } else {
              body.appendChild(script);
            }
            return (function (param) {
                      console.log("REMOVE LISTENERS");
                      script.removeEventListener("load", (function (error) {
                              return handleOnLoad(script, error);
                            }));
                      script.removeEventListener("error", (function (error) {
                              return handleOnError(script, error);
                            }));
                      
                    });
          }
          Curry._1(setStatus, (function (param) {
                  var attr = existingScript.getAttribute("data-status");
                  if (attr == null) {
                    return /* Idle */0;
                  }
                  switch (attr) {
                    case "failed" :
                        return /* Failed */3;
                    case "idle" :
                        return /* Idle */0;
                    case "loading" :
                        return /* Loading */1;
                    case "ready" :
                        return /* Ready */2;
                    default:
                      return /* Idle */0;
                  }
                }));
          existingScript.addEventListener("load", (function ($$event) {
                  return handleOnLoad(existingScript, $$event);
                }));
          existingScript.addEventListener("error", (function ($$event) {
                  return handleOnError(existingScript, $$event);
                }));
          return (function (param) {
                    console.log("REMOVE LISTENERS - Existing");
                    existingScript.removeEventListener("load", (function (error) {
                            return handleOnLoad(existingScript, error);
                          }));
                    existingScript.removeEventListener("error", (function (error) {
                            return handleOnError(existingScript, error);
                          }));
                    
                  });
        }), [src]);
  return match[0];
}

exports.useScript = useScript;
/* react Not a pure module */
